R
require(minfi)
require(limma)
require(DMRcate) #para la annotation
require(RColorBrewer) #colores gráficas minfi5
require(matrixStats)###PARA EL LMFIT
require(cluster)
require(Gviz)
require(lattice)
require(dplyr)
require(tidyr)
targets<-read.metharray.sheet("/Users/queletzu/Desktop/ARRAY2sept")###lo que hicimos para que corriera mi script fue cambiar todos lo archivos de fluorescencia a una carpeta con el CSV y quitarle en textWrangler el último espacio
#Nota: solo debe haber un archivo csv en la carpeta , de otra manera no sabe cual es el
#samplesheet y no funciona
targets$ID <- paste(targets$Sample_Group,targets$Sample_Name,sep=".")

RGset <- read.metharray.exp(targets = targets)
sampleNames(RGset) = targets$ID
detP<-detectionP(RGset)####quitar sondas con pobre detección
keep = colMeans(detP) < 0.05
RGSet = RGset[,keep]
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
ann450k = getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19)
MSetQ<-preprocessQuantile(RGSet)
#bajar el archivo citado en maksimovic de las sondas reactivas
xReactiveProbes <- read.csv(file=paste("REACTprobe", "48639-non-specific-probes-Illumina450k.csv",sep="/"),stringsAsFactors=FALSE)#### ESTO ES PARA QUITAR LAS REACTIVE PROBES
keep <- !(featureNames(MSetQ) %in% xReactiveProbes$TargetID)
mSetSqFlt <- MSetQ[keep,]
mSetSqFlt <- dropLociWithSnps(mSetSqFlt)
keep<-!(featureNames(mSetSqFlt)%in%ann450k$Name[ann450k$chr%in%c("chrX","chrY")]) #####ESTO ES PARA QUITAR LOS CROMOSOMAS SEXUALES
mSetSqFltXY <- mSetSqFlt[keep,]
bVals<-getBeta(mSetSqFltXY)
mVals <- getM(mSetSqFltXY)
ann450kSub <- ann450k[match(rownames(mVals),ann450k$Name),c(1:4,12:19,24:ncol(ann450k))]
pal <- brewer.pal(8,"Dark2")#####PALETA DE COLORES
fenotipo<- factor(Targets$grupo) ####DISEÑOEXPERIMENTAL
design = model.matrix(~0+fenotipo, data=Tar)
colnames(design) = c(levels(fenotipo))
cont.matrix = makeContrasts("Caso-Control",   levels=design) 
fit <- lmFit(mVals, design)####FIT LINEAL
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
####ANOTACION
myAnnotation <- cpg.annotate(
  mVals, datatype = "array",analysis.type="differential", 
  design=design,contrasts = TRUE, cont.matrix = cont.matrix,coef="Caso-Control", 
  fdr=0.05, arraytype="450K", what="M")###AQUI SE HACE UN ANÁLISIS FDR CON EL TRESHOLD REQUERIDO AQUÍ VA A ARROJAR LOS DMPs necesarios

DMPs <- topTable(fit2, num=Inf, coef=1, genelist=ann450kSub)#aquí hace la anotación con la ann450
DMRs <- dmrcate(myAnnotation, lambda=1000, C=2, pcutoff=0.005, min.cpgs=8)
results.ranges <- extractRanges(DMRs, genome = "hg19")
w<-results.ranges@elementMetadata@listData$overlapping.promoters#esta es la lista de 'genes'
m<-results.ranges@elementMetadata@listData
